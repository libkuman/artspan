<?php

//MUST BE SET TO THE NEXT YEARS OPENSTUDIOS EVENT ID

//2014 EVENT
define ('ARTSPAN_NEXT_OPENSTUDIOS_CIVICRM_EVENT_ID', 214);

//2013 EVENT
//define ('ARTSPAN_NEXT_OPENSTUDIOS_CIVICRM_EVENT_ID', 69);

define ('ARTSPAN_FIRST_CHOICE_WEEKEND_CF', 'custom_94');
define ('ARTSPAN_SECOND_CHOICE_WEEKEND_CF', 'custom_96');

// Get a Civi Contact
function _artspan_get_civi_contact($user, $options = array()) {
  civicrm_initialize(true);
  $contact_array = array();
  if($user != FALSE) {
    $params = array(
		    'version' => 3,
		    'sequential' => 1,
		    'uf_id' => $user,
		    );
    $result = civicrm_api('UFMatch', 'get', $params);
    if ($result && $result['values'] && $result['values'][0]) {
      $contact_id = $result['values'][0]['contact_id'];
      if ($contact_id) {
	$params = array(
			'version' => 3,
			'sequential' => 1,
			'contact_id' => $contact_id,
			);
	$result = civicrm_api('Contact', 'get', $params);
	if ($result && $result['values'] && $result['values'][0]) {
	  $contact_array = $result['values'][0];
	}
      }
    }
  }
  
  return $contact_array;
}


function _artspan_get_civi_contact_for_contact_id($contact_id) {
  $params = array(
		  'version' => 3,
		  'sequential' => 1,
		  'contact_id' => $contact_id,
		  );
  $result = civicrm_api('Contact', 'get', $params);

  if ($result && !$result['is_error'] && $result['values'] && 
      $result['values'][0]) {
    return $result['values'][0];
  }
  drupal_set_message("Error Code: #4558 -- No Contact for $contact_id", ERROR);
  return FALSE;
}

function _artspan_get_group_studio_site_contact($name) {
 $params = array(
		  'version' => 3,
		  'sequential' => 1,
		  'organization_name' => $name,
		  'contact_sub_type' => 'Group_Studio_Site',
		  );
  $result = civicrm_api('Contact', 'get', $params);
  if ($result && !$result['is_error'] && $result['values'] && 
      $result['values'][0]) {
    return $result['values'][0];
  }
  drupal_set_message("Error Code: #4559 -- No Contact for $name", ERROR);
  return FALSE;
}


function _artspan_load_civi_group_studios() {
 $params = array(
		  'version' => 3,
		  'sequential' => 1,
		  'sort' => 'organization_name',
		  'contact_type' => 'Organization',
		  'contact_sub_type' => 'Group_Studio_Site',
		  'rowCount' => 200,
		  );
  $result = civicrm_api('Contact', 'get', $params);
  if ($result && !$result['is_error'] && $result['values'] && 
      $result['values'][0]) {
    return $result['values'];
  }
  return FALSE;
}



// Get a Civi Contact's Location info off their Event Registration
function _artspan_get_civi_contact_public_location_info($user, $options = array()) {
  $PUBLIC_LOCATION_ID = 7;
  $STUDIO_LOCATION_ID = 6;
  $STUDIO_LOCATION_ID_OS1 = 8;
  $STUDIO_LOCATION_ID_OS2 = 9;
  $contact = _artspan_get_civi_contact($user, $options);
  
  foreach($contact['phone'] as $number) {
    if($number['location_type_id'] == $PUBLIC_LOCATION_ID) {
      $contact['phone'] = $number['phone'];
      break;
    }
  }

  if(is_array($contact['phone'])) {
    $contact['phone'] = NULL;
  }

  foreach($contact['email'] as $email) {
    if($email['location_type_id'] == $PUBLIC_LOCATION_ID) {
      $contact['email'] = $email['email'];
      break;
    }
  }

  foreach($contact['address'] as $address) {
    if($address['location_type_id'] == $STUDIO_LOCATION_ID) {
      $contact['address'] = $address;
    }
    if($address['location_type_id'] == $STUDIO_LOCATION_ID_OS1) {
      $contact['address_os1'] = $address;
    }
    if($address['location_type_id'] == $STUDIO_LOCATION_ID_OS2) {
      $contact['address_os2'] = $address;
    }
  }

  if($contact['address'] && $contact['address']['use_shared_address'] == 1) {
    $master_id = $contact['address']['master_id'];
    $query = "SELECT c.id, c.display_name, c.contact_sub_type, a.street_address, a.supplemental_address_1, a.city, a.state_province_id, a.postal_code, a.country_id FROM civicrm_address AS a LEFT JOIN civicrm_contact AS c ON a.contact_id = c.id WHERE a.id = $master_id;";
    $result = db_query($query);
    $contact['address']['shared'] = db_fetch_object($result);
  }

  if($contact['address_os1'] && $contact['address_os1']['use_shared_address'] == 1) {
    $master_id = $contact['address_os1']['master_id'];
    $query = "SELECT c.id, c.display_name, c.contact_sub_type, a.street_address, a.supplemental_address_1, a.city, a.state_province_id, a.postal_code, a.country_id FROM civicrm_address AS a LEFT JOIN civicrm_contact AS c ON a.contact_id = c.id WHERE a.id = $master_id;";
    $result = db_query($query);
    $contact['address_os1']['shared'] = db_fetch_object($result);
  }

  if($contact['address_os2'] && $contact['address_os2']['use_shared_address'] == 1) {
    $master_id = $contact['address_os2']['master_id'];
    $query = "SELECT c.id, c.display_name, c.contact_sub_type, a.street_address, a.supplemental_address_1, a.city, a.state_province_id, a.postal_code, a.country_id FROM civicrm_address AS a LEFT JOIN civicrm_contact AS c ON a.contact_id = c.id WHERE a.id = $master_id;";
    $result = db_query($query);
    $contact['address_os2']['shared'] = db_fetch_object($result);
  }

  if(is_array($contact['email'])) {
    $contact['email'] = NULL;
  }

  return $contact;
}

// Get a Civi Contacts Website
function _artspan_get_artist_websites($contact_id) {
  $contact_id = mysql_real_escape_string($contact_id);
  //$query = "SELECT DISTINCT w.url, w.id, t.name FROM civicrm_website AS w LEFT JOIN (SELECT name, value FROM civicrm_option_value AS v WHERE v.option_group_id = (SELECT id FROM civicrm_option_group WHERE name='website_type')) AS t ON (w.website_type_id = t.value) WHERE w.contact_id = '$contact_id';";
  $query = "SELECT w.url, w.id, t.name FROM civicrm_website AS w LEFT JOIN (SELECT name, value FROM civicrm_option_value AS v WHERE v.option_group_id = (SELECT id FROM civicrm_option_group WHERE name='website_type')) AS t ON (w.website_type_id = t.value) WHERE w.contact_id = '$contact_id';";
  $result = db_query($query);
  $sites = array();
  while($website = db_fetch_object($result)) {
    $sites[] = $website;
  }
  return $sites;
}

// Checks to see if the user is an event participant margot@rd 
function _artspan_get_openstudios_information($contact_id) {
  civicrm_initialize();
  $params = array(
		  'version' => 3,
		  'sequential' => 1,
		  'contact_id' => $contact_id,
		  'event_id' => ARTSPAN_NEXT_OPENSTUDIOS_CIVICRM_EVENT_ID,
		  );
  $result = civicrm_api('Participant', 'get', $params);  
  if ($result && !$result['is_error'] && $result['values'] && 
      $result['values'][0]) {
    return $result['values'][0];
  }
  return FALSE;
}

// Get the states from the Civi list based on USA country Id
function _artspan_load_state_options($country_id=1228, $field='name') {
  $field = mysql_real_escape_string($field);
  $country_id = mysql_real_escape_string($country_id);
  $query = "SELECT $field, id FROM civicrm_state_province WHERE country_id = '$country_id';";
  $result = db_query($query);
  $states = array();
  while($state = db_fetch_object($result)) {
    $states[$state->id] = $state->{$field};
  }
  return $states;
}

function _artspan_sync_artist_role($user, $civi_contact) {
  civicrm_initialize();
  $is_artist = FALSE;
  foreach($user->roles as $role) {
    if($role == 'artist') $is_artist = TRUE;
  }
  if($is_artist != ($civi_contact['contact_sub_type'][0] == 'Artist')) {

    $params = array(
		    'version' => 3,
		    'sequential' => 1,
		    'contact_id' => $civi_contact['contact_id'],
		    'contact_type' => 'Individual',
		    'contact_sub_type' => 'Artist',
		    );
    $result = civicrm_api('Contact', 'create', $params);
  }
}

function artspan_custom_menu() {
  return array (
    'artspan/js/addwebsite' => array (
      'title' => 'Javascript Add Website to List',
      'page callback' => 'artspan_addwebsite_js',
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK,
    ),
  );
}

function artspan_addwebsite_js($uid) {
  $civi_user = _artspan_get_civi_contact($uid);
  $form = artspan_addwebsite_form($uid, $civi_user);
  $form[] = array('#type' => 'textfield', '#name' => 'website_new');
  $rendered = drupal_render($form);
  print drupal_json(array('status' => TRUE, 'data' => $rendered));
}

function artspan_addwebsite_form($uid, $civi_user, &$twitter = NULL, &$facebook = NULL) {
  $siteform = array(
    '#title' => 'Web Site',
    '#prefix' => '<div id="field-website-items">',
    '#suffix' => '</div>',
    '#weight' => -5
  );

  $websites = _artspan_get_artist_websites($civi_user['contact_id']);

  foreach($websites as $website) {
    if($website->name == 'Twitter') {
      $twitter = $website;
      continue;
    }
    else if($website->name == 'Facebook') {
      $facebook = $website;
      continue;
    }
    else {
      $siteform['website_' . $website->id] = array(
        '#type' => 'textfield',
        '#value' => $website->url,
        '#name' => 'website_'. $website->id
      );
    }
  }

  $siteform['website_new_1'] = array(
    '#type' => 'textfield',
    '#name' => 'website_new_1'
    );

  return $siteform;
}

// Adds form fields to the Profile Edit form - margot@rd 
function artspan_custom_form_artist_node_form_alter(&$form) {
  $uid = $form['uid']['#value'];
  $civi_user = _artspan_get_civi_contact_public_location_info($uid, array('return_custom_45' => 1, 'return_custom_3' => 1, 'return_custom_4' => 1));
  $civi_user_event = _artspan_get_openstudios_information($civi_user['contact_id']);
  _artspan_sync_artist_role(user_load($form['#node']->uid), $civi_user);
  $form['_civi_contact'] = array(
    '#type' => 'value',
    '#value' => $civi_user
  );

  $form['phone'] = array(
    '#type' => 'textfield',
    '#title' => 'Public Phone Number',
    '#value' => $civi_user['phone'],
  );

  $form['email'] = array(
    '#type' => 'textfield',
    '#title' => 'Public Email Address',
    '#value' => $civi_user['email'],
  ); 
  
  $form['websites'] = array(
    '#title' => 'Web Site',
    '#type' => 'fieldset',
    'field_websites_add_more' => array(
      '#type' => 'submit',
      '#name' => 'field_websites_add_more',
      '#value' => 'Add another item',
      '#submit' => array('content_add_more_submit_proxy'),
      '#ahah' => array(
        'path' => 'artspan/js/addwebsite/'. $uid,
        'wrapper' => 'field-website-items',
        'method' => 'replace',
        'effect' => 'fade',
        'event' => 'mousedown',
        'keypress' => TRUE
      ),
      '#button_type' => 'submit'
    )
  );

  $form['websites']['list'] = artspan_addwebsite_form($uid, $civi_user, $twitter, $facebook);

  if(isset($twitter)) {
    $twitter_url = $twitter->url;
    $twitter_name = 'website_' . $twitter->id;
  }
  else {
    $twitter_name = 'website_Twitter';
  }

  $form['twitter'] = array(
    '#type' => 'textfield',
    '#title' => 'Twitter URL',
    '#value' => $twitter_url,
    '#name' => $twitter_name,
    '#size' => 60
  );

  if(isset($facebook)) {
    $facebook_url = $facebook->url;
    $facebook_name = 'website_' . $facebook->id;
  }
  else {
    $facebook_name = 'website_Facebook';
  }
  
  $form['facebook'] = array(
    '#type' => 'textfield',
    '#title' => 'Facebook URL',
    '#value' => $facebook_url,
    '#name' => $facebook_name,
    '#size' => 60
  );

  $group_studios = array(0=>'- Select A Studio -');
  foreach(_artspan_load_civi_group_studios() as $studio) {
    $group_studios[$studio['contact_id']] = $studio['display_name'];
  }
  $states = _artspan_load_state_options();
  drupal_add_js(drupal_get_path('module', 'artspan_custom') . '/studio.js');
  $group_studio = isset($civi_user['address']['shared']) && $civi_user['address']['shared']->contact_sub_type == 'Group_Studio_Site';

  $form['#validate'] = array('_artspan_artist_profile_validate');
  $form['#submit'] = array('_artspan_artist_profile_submit');
  $form['buttons']['submit']['#submit'][] = '_artspan_artist_profile_redirect';
}


function artspan_custom_civicrm_buildForm( $formName, &$form ) {
  //dsm($formName);
  //dsm($form);
}


// Runs after the Civic Registration takes place - margot@rd
function artspan_custom_civicrm_postProcess( $formName, &$form ) {
  if ($formName == 'CRM_Event_Form_Registration_Confirm') {
    global $user;
    $form_data = array();

    // Get the civi participant record - margot@rd
    $params = array(
		    'version' => 3,
		    'sequential' => 1,
		    'event_id' => ARTSPAN_NEXT_OPENSTUDIOS_CIVICRM_EVENT_ID,
		    'contact_id' => $contact['contact_id'],
		    );
    $result = civicrm_api('Participant', 'get', $params);
    if ($result && !$result['is_error'] && $result['values'] && 
	$result['values'][0]) {
      $participant = $result['values'][0];
      $participant_id = $participant['participant_id'];
    }


    
    // Here they add the artist role to the drupal profile - margot@rd
    $user_roles = $user->roles;
    $user_roles[3] = 'artist';
    user_save($user, array('roles' => $user_roles));
    
    // load all the form values into into $form_data - margot@rd
    foreach($form->_values['params'] as $key => $form_values) {
      if (is_numeric($key)) $form_data = $form_values;
    }

    // Add civi event info to the artist profile node or make a new one 
    //for them - margot@rd
    $profile_node = node_load(array('uid' => $user->uid, 'type' => 'artist'), NULL, true);

    if (!is_object($profile_node)) {
      $profile_node = new stdClass();
      $profile_node->uid = $user->uid;
    
      $profile_node->type = 'artist';
      $profile_node->created = strtotime("now");
      $profile_node->changed = strtotime("now");
      $profile_node->status = 1;
      $profile_node->comment = 0;
      $profile_node->promote = 0;
      $profile_node->moderate = 0;
      $profile_node->sticky = 0;
    }

    if ($form_data['studio_weekend_no']) {
      $profile_node->field_sf_open_studios = array();

      $term = taxonomy_get_term($form_data['studio_weekend_no']);
      $parents = taxonomy_get_parents($form_data['studio_weekend_no']);
      foreach($parents as $getparent) {
        $parent = $getparent;
      }
      $profile_node->field_sf_open_studios[] = array('value' => $parent->tid);
      $profile_node->field_sf_open_studios[] = array('value' => $term->tid);
      $profile_node->field_sf_open_studios_wk1 = array(array('value' => $term->tid));
    }

    if ($form_data['studio_weekend_no_2']) {
      $term = taxonomy_get_term($form_data['studio_weekend_no_2']);
      $parents = taxonomy_get_parents($form_data['studio_weekend_no_2']);
      foreach($parents as $getparent) {
        $parent = $getparent;
      }

      $profile_node->field_sf_open_studios[] = array('value' => $parent->tid);
      $profile_node->field_sf_open_studios[] = array('value' => $term->tid);
      $profile_node->field_sf_open_studios_wk2 = array(array('value' => $term->tid));
    }

    $profile_node->field_content_title[0]['value'] = 
      trim($form_data['custom_10']);

    // Then save the Node out with the new data - margot@rd
    node_save($profile_node);
    _node_index_node($profile_node);
    
    // Save .tiffs to a custom directory
    $tiff_dest = 
      '/web/artspan.org/www/sites/default/files/openstudios_tiffs_2013/';

    $firstname = urlencode($form_data['first_name']);
    $lastname = urlencode($form_data['last_name']);
		// save weekend one's tiff
    if(isset($form_data['custom_16']['name'])) {
      $neighborhood = urlencode($form_data[ARTSPAN_FIRST_CHOICE_WEEKEND_CF]);
      $filename = $tiff_dest . $firstname . '_' . $lastname . '_' . $neighborhood . '_w1.tif';
      while (file_exists($filename)) {
        $next_number = (is_int($next_number)) ? $next_number + 1 : 0;
        $filename = $tiff_dest . $firstname . '_' . $lastname . '_' . $neighborhood . '_' . $next_number . '_weekend1.tiff';
      }
      copy($form_data['custom_16']['name'], $filename);
   	}
		// save weekend two's tiff
		if(isset($form_data['custom_56']['name'])) {
      $neighborhood = urlencode($form_data[ARTSPAN_SECOND_CHOICE_WEEKEND_CF]);
      $filename = $tiff_dest . $firstname . '_' . $lastname . '_' . $neighborhood . '_w2.tif';
      while (file_exists($filename)) {
        $next_number = (is_int($next_number)) ? $next_number + 1 : 0;
        $filename = $tiff_dest . $firstname . '_' . $lastname . '_' . $neighborhood . '_' . $next_number . '_weekend2.tiff';
      }
      copy($form_data['custom_56']['name'], $filename);
    }

    // Save address and phone of the Group Site to civi contact
    $contact = _artspan_get_civi_contact_public_location_info($user->uid);
    $STUDIO_LOCATION_ID = 6;
    $STUDIO_LOCATION_ID_OS1 = 8;
    $STUDIO_LOCATION_ID_OS2 = 9;

    // Is a group site set for weekend 1? If yes then
    if($form_data['custom_70'] == 1) {
      // Get group site
      $post_group_location_reference = db_escape_string($form_data['custom_83_id']);
      $query = "SELECT id, street_address, supplemental_address_1, city, state_province_id, postal_code, country_id FROM civicrm_address WHERE contact_id = $post_group_location_reference AND location_type_id = $STUDIO_LOCATION_ID;";
		
      $result = db_query($query);

      $groupsite = db_fetch_object($result);      

      // we need this participant id so that we can use it to update the participant record
      $contact_params['custom_25'] = $groupsite->street_address;
      $contact_params['custom_71'] = $groupsite->city;
      $contact_params['custom_24'] = $form_data['custom_83']; 
      if($groupsite->postal_code != '') {
      	$contact_params['custom_28'] = $groupsite->postal_code;
      }
      $contact_params['custom_72'] = 'California';
      $contact_params['version'] = 3;
      $contact_params['event_id'] = ARTSPAN_NEXT_OPENSTUDIOS_CIVICRM_EVENT_ID;
      $contact_params['id'] = $participant_id;
      
      // Ok now that we have what we need lets actually use the api to update (arrg create?) the participant - margot@rd
      $response = civicrm_api('Participant', 'create', $params);
    } 

     // Is a group site set for weekend 2?
     if($form_data['custom_76'] == 1) {
      	$contact_params = array();
      
        // Get group site
        $post_group_location_reference = mysql_real_escape_string($form_data['custom_84_id']);
        $query = "SELECT id, street_address, supplemental_address_1, city, state_province_id, postal_code, country_id FROM civicrm_address WHERE contact_id = $post_group_location_reference AND location_type_id = $STUDIO_LOCATION_ID;";
        $result = db_query($query);
        $groupsite = db_fetch_object($result);
               
			
      $contact_params['custom_81'] = $groupsite->street_address;
      $contact_params['custom_77'] = $groupsite->city;
      $contact_params['custom_78'] = 'California';
      $contact_params['custom_75'] = $form_data['custom_84']; 
      if($groupsite->postal_code != '') {
      	$contact_params['custom_82'] = $groupsite->postal_code;
      }
      $contact_params['version'] = 3;
      $contact_params['event_id'] = ARTSPAN_NEXT_OPENSTUDIOS_CIVICRM_EVENT_ID;
      $contact_params['id'] = $participant_id;

      $response = civicrm_api('Participant', 'create', $params);
     }
     //FIXME
     //SET PUBLISHIABLE PHONE NUMBER 
  }
}


function _artspan_artist_profile_validate($form, &$form_state) {
  drupal_add_js(drupal_get_path('module', 'artspan') . '/studio.js');
  foreach($form['#post'] as $field => $value) {
    if(strstr($field, 'website')) {
      if($value && (!valid_url($value) || !valid_url($value, TRUE))) {
        form_set_error($field, "One of the urls below is not valid.");
      }
    }
  }

  /*if($form['#post']['groupsite_question'] == 1) {
    if(!array_key_exists($form['#post']['group_location_reference'], _artspan_load_civi_group_studios())) {
      form_set_error('group_location_reference', "Please choose a group location.");
    }
  }*/
}

function _artspan_artist_profile_redirect($form, &$form_state) {
  $form_state['redirect'] = 'user/'.$form['uid']['#value'].'/edit/artwork';
}

// updated Civi when the profile is submitted margot@rd
function _artspan_artist_profile_submit($form, &$form_state) {
  $PUBLIC_LOCATION_ID = 7;
  $STUDIO_LOCATION_ID = 6;
  
  $post = $form['#post'];
  $user = _artspan_get_civi_contact($form['#node']->uid);
  $contact_id = $user['contact_id'];

  _artspan_sync_artist_role(user_load($form['#node']->uid), $user);

  $email = $post['email'];
  $phone = $post['phone'];

  // Is a public/studio location already set?
  $public = FALSE;
  $studio = FALSE;
  foreach(array_merge($user['phone'], $user['email']) as $i) {
    if($i['location_type_id'] == $PUBLIC_LOCATION_ID) {
      $public = TRUE;
    }
    if($i['location_type_id'] == $STUDIO_LOCATION_ID) {
      $studio = TRUE;
    }
  }

  // Civicrm Update
  $params = array(
    'version' => '3.0',
    'contact_id' => $contact_id,
    'phone' => array(
      array(
        'phone' => $post['phone'],
        'phone_type_id' => 1,
        'location_type_id' => $PUBLIC_LOCATION_ID
      )
    ),
    'email' => array(
      array(
        'email' => $post['email'],
        'location_type_id' => $PUBLIC_LOCATION_ID
      )
    )
  );

  if($public) {
    $response =& civicrm_location_update($params);
  }
  else {
    $response =& civicrm_location_add($params);
  }

  // Prepare contact params for studio
  $contact_params = array(
      'contact_id' => $contact_id,
      'contact_type' => 'Individual',
      'custom_45' => $post['studio_title'],
      );

  // Update the web sites
  foreach($post as $key => $value) {
    $args = explode('_', $key);
    if($args[0] == 'website') {
      $value = mysql_real_escape_string($value);
      if(is_numeric($args[1])) {
        $id = $args[1];
        if($value == '') {
          $query = "DELETE FROM civicrm_website WHERE contact_id='$contact_id' AND id='$id'";
        }
        else {
          $query = "UPDATE civicrm_website SET url='$value' WHERE contact_id='$contact_id' AND id='$id'";
        }
        $result = db_query($query);
      }
      else {
        if($args[1] == "Twitter") {
          $website_type = 4;
        }
        elseif($args[1] == "Facebook") {
          $website_type = 3;
        }
        else {
          $website_type = 1;
        }
        
        if($value != '')
        {
          $query = "INSERT INTO civicrm_website (contact_id, url, website_type_id) VALUES ('$contact_id', '$value', '$website_type');";
          $result = db_query($query);
        }
      }
    }
  }
}

function artspan_custom_form_user_profile_form_alter(&$form) {
  // Turn off autocomplete.
  $form['#attributes'] = array('autocomplete' => 'off');

  /* The first part of this function is borrowed from the ajax username_check module,
   * but now the functionality also works for the user edit page.
   */
  $mode = variable_get('username_check_mode', 'auto');
  _username_check_load_resources($mode);

  if (isset($form['account']) && $form['account']['#type'] == 'fieldset') {
    $form_group = &$form['account'];
  }
  else {
    $form_group = &$form;
  }
  
  if ($mode == 'manual') {
    $form_group['name']['#weight'] = -5;
    $form_group['name']['#prefix'] = '<div id="username-check-wrapper">';
    $form_group['name']['#suffix'] = '</div>';

    $form_group['username_check_button'] = array(
      '#value' => '<input type="button" name="op" id="edit-username-check-button" value="Check availability" class="form-button" style="display: inline-block">',
      '#prefix' => '<div id="username-check-message" class="username-check-message"></div>',
      '#weight' => -4,
    );
  }
  elseif ($mode == 'auto') {
    $module_path = drupal_get_path('module', 'username_check');
    $form_group['name']['#prefix'] = '<div id="username-check-wrapper">';
    $form_group['name']['#suffix'] = '</div><div id="username-check-message"></div><div id="username-check-informer" class="username-check-informer">&nbsp;</div>';
  }

  /* Now, we want to add the civicrm personal information profile to this form. Fun! */
  $curr_user = $form['_account']['#value'];
  $civi_user = _artspan_get_civi_contact($curr_user->uid);
  
  $form['_civi_contact'] = array(
    '#type' => 'value',
    '#value' => $civi_user
  );
  //dsm("hi mom");
  
  $form['personal'] = 
    array(
	  '#type' => 'fieldset',
	  '#title' => 'Personal Information',
	  '#weight' => -20,
	  'profile' => 
	  array('#value' => 
		CRM_Core_BAO_UFGroup::getEditHTML($civi_user['contact_id'], 
						  'Personal Information')
		)
	  );
  
  $form['demographics'] = 
    array(
	  '#type' => 'fieldset',
	  '#title' => 'Demographic Information (Optional)',
	  '#weight' => -19,
	  'profile' => 
	  array('#value' => 
		CRM_Core_BAO_UFGroup::getEditHTML($civi_user['contact_id'], 
						  'Demographics (Optional)')
		)
	  );
  
}




function artspan_custom_user($op, &$edit, $account, $category = NULL) {
  if($op == 'after_update' && $category == 'account') {
    _artspan_sync_artist_role($account, $account->_civi_contact);
  }
}  



// Prepopulate artist on new artwork form field
function artspan_custom_form_editview_node_form_new_alter(&$form) {
  $form['field_artist'][0]['#default_value']['uid'] = arg(1);
}

function artspan_custom_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  // If we're on the edit artwork page, make sure node's artist and uid are set.
  if($op == 'presave' && $node->type == 'artwork' && arg(0) == 'user' && arg(3) == 'artwork') {
    $user = user_load(arg(1));
    $node->uid = arg(1);
    $node->name = $user->name;
    $node->field_artist[0]['uid'] = arg(1);
    $node->title = $node->name . ' - ' . $node->field_content_title[0]['value'];
  }

  if($op == 'insert' && $node->type == 'artwork') {
    // If the current user has no thumbnail art, make this his thumbnail piece
    $profile = content_profile_load('artist', $node->uid);
    if($profile->field_ref_thumbnail_art[0]['nid'] == NULL) {
      $profile->field_ref_thumbail_art[0]['nid'] = $node->nid;
      $query = "UPDATE content_type_artist SET field_ref_thumbnail_art_nid = '{$node->nid}' WHERE nid='{$profile->nid}';";
      $result = db_query($query);
    }
  }
}

function artspan_custom_views_data_alter(&$data) {

  $data['civicrm_contact']['first_name'] = array(
  'title' => t('Last Name'),
  'help' => t('Last Name'),
  'field' => array(
  'handler' => 'civicrm_handler_field_contact_link',
  'click sortable' => TRUE,
  ),
  'argument' => array(
  'handler' => 'views_handler_argument_string',
  ),
  'filter' => array(
  'handler' => 'views_handler_filter_string',
  'allow empty' => TRUE,
  ),
  'sort' => array(
  'handler' => 'views_handler_sort',
  ),
  );
//DISPLAY Name for the Contact (Full Name with Prefixes and Suffixes)
// see civicrm.views.inc around line 238
    $data['civicrm_contact']['display_name'] = array(
        'title' => t('Display Name'),
        'help' => t('Full Name of the Contact with prefixes and suffixes'),
      'field' => array(
         'handler' => 'civicrm_handler_field_contact_link',
         'click sortable' => TRUE,
        ),
        'argument' => array(
         'handler' => 'views_handler_argument_string'
      ),
      'filter' => array(
         'handler' => 'views_handler_filter_string',
         'allow empty' => TRUE,
      ),
      'sort' => array(
         'handler' => 'views_handler_sort',
        )
   );
}
