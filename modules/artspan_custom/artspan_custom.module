<?php

//MUST BE SET TO THE NEXT YEARS OPENSTUDIOS EVENT ID

//2014 EVENT
define ('ARTSPAN_NEXT_OPENSTUDIOS_CIVICRM_EVENT_ID', 214);

//2013 EVENT
//define ('ARTSPAN_NEXT_OPENSTUDIOS_CIVICRM_EVENT_ID', 69);

define ('ARTSPAN_FIRST_CHOICE_WEEKEND_CF', 'custom_94');
define ('ARTSPAN_SECOND_CHOICE_WEEKEND_CF', 'custom_96');

define ('ARTSPAN_PUBLIC_LOCATION_ID', 7);
define ('ARTSPAN_STUDIO_LOCATION_ID', 6);
define ('ARTSPAN_STUDIO_LOCATION_ID_OS1', 8);
define ('ARTSPAN_STUDIO_LOCATION_ID_OS2', 9);

define ('ARTSPAN_WEBSITE_TYPE_HOME', 1);
define ('ARTSPAN_WEBSITE_TYPE_FACEBOOK', 3);
define ('ARTSPAN_WEBSITE_TYPE_TWITTER', 4);

// Get a Civi Contact
function _artspan_get_civi_contact($user) {
  civicrm_initialize(true);
  $contact_array = array();
  if($user != FALSE) {
    $params = array(
		    'version' => 3,
		    'sequential' => 1,
		    'uf_id' => $user,
		    );
    $result = civicrm_api('UFMatch', 'get', $params);
    if ($result && $result['values'] && $result['values'][0]) {
      $contact_id = $result['values'][0]['contact_id'];
      if ($contact_id) {
	$params = array(
			'version' => 3,
			'sequential' => 1,
			'contact_id' => $contact_id,
			);
	$result = civicrm_api('Contact', 'get', $params);
	if ($result && $result['values'] && $result['values'][0]) {
	  $contact_array = $result['values'][0];
	}
      }
    }
  }
  
  return $contact_array;
}

function _artspan_get_user_for_civi_contact($contact_id) {
  civicrm_initialize(true);
  $contact_array = array();
  $params = array(
		  'version' => 3,
		  'sequential' => 1,
		  'contact_id' => $contact_id,
		  );
  $result = civicrm_api('UFMatch', 'get', $params);
  if ($result && $result['values'] && $result['values'][0]) {
    $user_id = $result['values'][0]['uf_id'];
    if ($user_id) {
      return user_load($user_id);
    }
  }

  return user_load(0);
}


function _artspan_get_civi_contact_for_contact_id($contact_id) {
  $params = array(
		  'version' => 3,
		  'sequential' => 1,
		  'contact_id' => $contact_id,
		  );
  $result = civicrm_api('Contact', 'get', $params);

  if ($result && !$result['is_error'] && $result['values'] && 
      $result['values'][0]) {
    return $result['values'][0];
  }
  drupal_set_message("Error Code: #4558 -- No Contact for $contact_id", ERROR);
  return FALSE;
}

function _artspan_get_group_studio_site_contact($name) {
 $params = array(
		  'version' => 3,
		  'sequential' => 1,
		  'organization_name' => $name,
		  'contact_sub_type' => 'Group_Studio_Site',
		  );
  $result = civicrm_api('Contact', 'get', $params);
  if ($result && !$result['is_error'] && $result['values'] && 
      $result['values'][0]) {
    return $result['values'][0];
  }
  drupal_set_message("Error Code: #4559 -- No Contact for $name", ERROR);
  return FALSE;
}


// Get a Civi Contact's Location info off their Event Registration
function _artspan_get_civi_contact_public_location_info($user) {
  $contact = _artspan_get_civi_contact($user);

  $params = array(
		  'version' => 3,
		  'sequential' => 1,
		  'contact_id' => $contact['contact_id'],
		  'location_type_id' => ARTSPAN_PUBLIC_LOCATION_ID,
		  );
  $result = civicrm_api('Email', 'get', $params);
  if ($result && !$result['is_error'] && $result['values'][0]) {
    $contact['public_email'] = $result['values'][0]['email'];
    $contact['public_email_id'] = $result['values'][0]['id'];
  }
  else {
    $contact['public_email'] = '';
  }

  $params = array(
		  'version' => 3,
		  'sequential' => 1,
		  'contact_id' => $contact['contact_id'],
		  'location_type_id' => ARTSPAN_PUBLIC_LOCATION_ID,
		  );
  $result = civicrm_api('Phone', 'get', $params);
  if ($result && !$result['is_error'] && $result['values'][0]) {
    $contact['public_phone'] = $result['values'][0]['phone'];
    $contact['public_phone_id'] = $result['values'][0]['id'];
  }
  else {
    $contact['public_phone'] = '';
  }

  return $contact;
}

// Get a Civi Contacts Website
function _artspan_get_artist_websites($contact_id) {
  $params = array(
		  'version' => 3,
		  'sequential' => 1,
		  'contact_id' => 28083,
		  );
  $result = civicrm_api('Website', 'get', $params);

  if ($result && !$result['is_error'] && $result['values'] && 
      $result['values'][0]) {

    $sites['facebook'] = array();
    $sites['twitter'] = array();
    $sites['home'] = array();

    foreach( $result['values'] as $website) {
      if ($website['website_type_id'] == ARTSPAN_WEBSITE_TYPE_FACEBOOK) {
	$sites['facebook'][$website['id']] = $website['url']; 
      }
      else if ($website['website_type_id'] == ARTSPAN_WEBSITE_TYPE_TWITTER) {
	$sites['twitter'][$website['id']] = $website['url']; 
      }
      else {
	$sites['home'][$website['id']] = $website['url']; 
      }
    }
  }
  return $sites;
}

// Checks to see if the user is an event participant margot@rd 
function _artspan_get_openstudios_information($contact_id) {
  civicrm_initialize();
  $params = array(
		  'version' => 3,
		  'sequential' => 1,
		  'contact_id' => $contact_id,
		  'event_id' => ARTSPAN_NEXT_OPENSTUDIOS_CIVICRM_EVENT_ID,
		  );
  $result = civicrm_api('Participant', 'get', $params);  
  if ($result && !$result['is_error'] && $result['values'] && 
      $result['values'][0]) {
    return $result['values'][0];
  }
  return FALSE;
}

// Get the states from the Civi list based on USA country Id
function _artspan_load_state_options($country_id=1228, $field='name') {
  $field = mysql_real_escape_string($field);
  $country_id = mysql_real_escape_string($country_id);
  $query = "SELECT $field, id FROM civicrm_state_province WHERE country_id = '$country_id';";
  $result = db_query($query);
  $states = array();
  while($state = db_fetch_object($result)) {
    $states[$state->id] = $state->{$field};
  }
  return $states;
}

function _artspan_sync_artist_role($user, $civi_contact) {
  civicrm_initialize();
  $is_artist = FALSE;
  foreach($user->roles as $role) {
    if($role == 'artist') $is_artist = TRUE;
  }
  
  if($is_artist != ($civi_contact['contact_sub_type'][0] == 'Artist')) {

    $params = array(
		    'version' => 3,
		    'sequential' => 1,
		    'contact_id' => $civi_contact['contact_id'],
		    'contact_type' => 'Individual',
		    'contact_sub_type' => 'Artist',
		    );
    $result = civicrm_api('Contact', 'create', $params);
  }
}

function artspan_custom_menu() {
   $items['admin/artspan/settings'] =
     array(
	   'title' => 'Artspan Settings',
	   'description' => 'A page for setting Artspan settings',
	   'page callback' => 'drupal_get_form',
	   'page arguments' => array('artspan_custom_settings_form'),
	   'access callback' => 'user_access',
	   'access arguments' => array('administer site configuration'),
	   'type' => MENU_NORMAL_ITEM,
	   );
   return $items;
}

function artspan_custom_settings_form() {
  $form['artspan_custom_applications_open'] =
    array(
          '#type' => 'checkbox',
          '#title' => 'Is Open Studios Registration Open?',
          '#default_value' => variable_get('artspan_custom_applications_open'),
          '#description' => 'Check this box if you would like to open up '.
          'registration open for the current year.',
          );
  return system_settings_form($form);
}

function artspan_addwebsite_form($uid, $civi_user, &$twitter = NULL, &$facebook = NULL) {
  $siteform = array(
    '#title' => 'Web Site',
    '#prefix' => '<div id="field-website-items">',
    '#suffix' => '</div>',
    '#weight' => -5
  );

  $websites = _artspan_get_artist_websites($civi_user['contact_id']);
  foreach($websites as $type=>$type_websites) {
    if($type == 'twitter') {
      foreach($type_websites as $id=>$url) {
	$twitter = array($id=>$url);
	break;
      }
      continue;
    }
    else if($type == 'facebook') {
      foreach($type_websites as $id=>$url) {
	$facebook = array($id=>$url);
	break;
      }
    }
    else {
      $counter = 0;
      foreach($type_websites as $id=>$url) {
	$counter ++;
	$siteform['website_' . $id] = 
	  array(
		'#type' => 'textfield',
		'#value' => $url,
		'#name' => 'website_'. $id
		);
      }
    }
  }
  $create_one_empty = TRUE;
  while ($create_one_empty || $counter < 3) {
    $siteform['website_new_'.$counter] = 
      array(
	    '#type' => 'textfield',
	    '#name' => 'website_new_'.$counter
	    );
    $counter++;
    $create_one_empty = FALSE;
  }

  return $siteform;
}


function artspan_custom_civicrm_buildForm( $formName, &$form ) {

}


// Runs after the Civic Registration takes place - margot@rd
function artspan_custom_civicrm_postProcess( $formName, &$form ) {
  if ($formName == 'CRM_Event_Form_Registration_Confirm') {
    $contact_id = $form->_values['participant']['contact_id'];
    $contact = _artspan_get_civi_contact_for_contact_id($contact_id);
    $participant_id = $form->_values['participant']['participant_id'];
    $user = _artspan_get_user_for_civi_contact($contact_id);

    // Here they add the artist role to the drupal profile - margot@rd
    $user_roles = $user->roles;
    $user_roles[3] = 'artist';
    user_save($user, array('roles' => $user_roles));
    
    // load all the form values into into $form_data - margot@rd
    foreach($form->_values['params'] as $key => $form_values) {
      if (is_numeric($key)) $form_data = $form_values;
    }

    // Add civi event info to the artist profile node or make a new one 
    //for them - margot@rd
    $profile_node = node_load(array('uid' => $user->uid, 'type' => 'artist'), NULL, true);

    if (!is_object($profile_node)) {
      $profile_node = new stdClass();
      $profile_node->uid = $user->uid;
    
      $profile_node->type = 'artist';
      $profile_node->created = strtotime("now");
      $profile_node->changed = strtotime("now");
      $profile_node->status = 1;
      $profile_node->comment = 0;
      $profile_node->promote = 0;
      $profile_node->moderate = 0;
      $profile_node->sticky = 0;
    }

    if ($form_data['studio_weekend_no']) {
      $profile_node->field_sf_open_studios = array();

      $term = taxonomy_get_term($form_data['studio_weekend_no']);
      $parents = taxonomy_get_parents($form_data['studio_weekend_no']);
      foreach($parents as $getparent) {
        $parent = $getparent;
      }
      $profile_node->field_sf_open_studios[] = array('value' => $parent->tid);
      $profile_node->field_sf_open_studios[] = array('value' => $term->tid);
      $profile_node->field_sf_open_studios_wk1 = array(array('value' => $term->tid));
    }

    if ($form_data['studio_weekend_no_2']) {
      $term = taxonomy_get_term($form_data['studio_weekend_no_2']);
      $parents = taxonomy_get_parents($form_data['studio_weekend_no_2']);
      foreach($parents as $getparent) {
        $parent = $getparent;
      }

      $profile_node->field_sf_open_studios[] = array('value' => $parent->tid);
      $profile_node->field_sf_open_studios[] = array('value' => $term->tid);
      $profile_node->field_sf_open_studios_wk2 = array(array('value' => $term->tid));
    }

    $profile_node->field_content_title[0]['value'] = 
      trim($form_data['custom_10']);

    $medium_tid = artspan_custom_get_medium_tid($form_data['custom_21']);
    if ($medium_tid) {
      $profile_node->field_primary_medium[0]['value'] =$medium_tid;
    }

    // Then save the Node out with the new data - margot@rd
    node_save($profile_node);
    _node_index_node($profile_node);
    
    // Save .tiffs to a custom directory
    $tiff_dest = 
      '/web/artspan.org/www/sites/default/files/openstudios_tiffs_2014/';

    $firstname = urlencode($form_data['first_name']);
    $lastname = urlencode($form_data['last_name']);

    // save weekend one's tiff
    if(isset($form_data['custom_16']['name'])) {
      $neighborhood = urlencode($form_data[ARTSPAN_FIRST_CHOICE_WEEKEND_CF]);
      $filename = $tiff_dest . $lastname . '_' . $firstname . '_' . 
	$neighborhood . '_w1.tif';
      while (file_exists($filename)) {
        $next_number = (is_int($next_number)) ? $next_number + 1 : 0;
        $filename = $tiff_dest . $lastname . '_' . $firstname . '_' . $neighborhood . '_' . $next_number . '_w1.tif';
      }
      copy($form_data['custom_16']['name'], $filename);
    }
    // save weekend two's tiff
    if(isset($form_data['custom_56']['name'])) {
      $neighborhood = urlencode($form_data[ARTSPAN_SECOND_CHOICE_WEEKEND_CF]);
      $filename = $tiff_dest . $firstname . '_' . $lastname . '_' . 
	$neighborhood . '_w2.tif';
      while (file_exists($filename)) {
        $next_number = (is_int($next_number)) ? $next_number + 1 : 0;
        $filename = $tiff_dest . $firstname . '_' . $lastname . '_' . 
	  $neighborhood . '_' . $next_number . '_w2.tif';
      }
      copy($form_data['custom_56']['name'], $filename);
    }

    // Save address and phone of the Group Site to civi contact
    $STUDIO_LOCATION_ID = 6;
    $STUDIO_LOCATION_ID_OS1 = 8;
    $STUDIO_LOCATION_ID_OS2 = 9;

    // Is a group site set for weekend 1? If yes then
    if($form_data['custom_70'] == 1) {
      // Get group site
      $post_group_location_reference = db_escape_string($form_data['custom_83_id']);
      $query = "SELECT id, street_address, supplemental_address_1, city, state_province_id, postal_code, country_id FROM civicrm_address WHERE contact_id = $post_group_location_reference AND location_type_id = $STUDIO_LOCATION_ID;";
		
      $result = db_query($query);

      $groupsite = db_fetch_object($result);      
      // we need this participant id so that we can use it to update the participant record
      $contact_params['custom_25'] = $groupsite->street_address;
      $contact_params['custom_71'] = $groupsite->city;
      $contact_params['custom_24'] = $form_data['custom_83']; 
      if($groupsite->postal_code != '') {
      	$contact_params['custom_28'] = $groupsite->postal_code;
      }
      $contact_params['custom_72'] = 1004;
      $contact_params['version'] = 3;
      $contact_params['event_id'] = ARTSPAN_NEXT_OPENSTUDIOS_CIVICRM_EVENT_ID;
      $contact_params['id'] = $participant_id;
      
      // Ok now that we have what we need lets actually use the api to update (arrg create?) the participant - margot@rd
      $response = civicrm_api('Participant', 'create', $contact_params);
    } 

     // Is a group site set for weekend 2?
     if($form_data['custom_76'] == 1) {
      	$contact_params = array();
      
        // Get group site
        $post_group_location_reference = mysql_real_escape_string($form_data['custom_84_id']);
        $query = "SELECT id, street_address, supplemental_address_1, city, state_province_id, postal_code, country_id FROM civicrm_address WHERE contact_id = $post_group_location_reference AND location_type_id = $STUDIO_LOCATION_ID;";
        $result = db_query($query);
        $groupsite = db_fetch_object($result);
               
			
      $contact_params['custom_81'] = $groupsite->street_address;
      $contact_params['custom_77'] = $groupsite->city;
      $contact_params['custom_78'] = 1004;
      $contact_params['custom_75'] = $form_data['custom_84']; 
      if($groupsite->postal_code != '') {
      	$contact_params['custom_82'] = $groupsite->postal_code;
      }
      $contact_params['version'] = 3;
      $contact_params['event_id'] = ARTSPAN_NEXT_OPENSTUDIOS_CIVICRM_EVENT_ID;
      $contact_params['id'] = $participant_id;

      $response = civicrm_api('Participant', 'create', $contact_params);
     }
  }
}

function artspan_custom_get_medium_tid($name) {
  $sql = 
    "SELECT tid 
     FROM term_data 
     WHERE LOWER(REPLACE(name, ' ', '-')) = LOWER('$name')
     AND vid=2";
  $result = db_fetch_object(db_query($sql));
  return $result ? $result->tid : NULL;
}

// Adds form fields to the Profile Edit form - margot@rd 
function artspan_custom_form_artist_node_form_alter(&$form) {
  $uid = $form['uid']['#value'];
  $civi_user = _artspan_get_civi_contact_public_location_info($uid);
  
  _artspan_sync_artist_role(user_load($form['#node']->uid), $civi_user);

  $form['_civi_contact'] = array(
    '#type' => 'value',
    '#value' => $civi_user
  );

  $form['phone'] = array(
    '#type' => 'textfield',
    '#title' => 'Public Phone Number',
    '#value' => $civi_user['public_phone'],
  );

  $form['email'] = array(
    '#type' => 'textfield',
    '#title' => 'Public Email Address',
    '#value' => $civi_user['public_email'],
  ); 
  
  $form['websites'] = array(
    '#title' => 'Web Sites',
    '#type' => 'fieldset',
  );

  $form['websites']['list'] = artspan_addwebsite_form($uid, $civi_user, $twitter, $facebook);

  if(isset($twitter)) {
    foreach($twitter as $id=>$url) {
      $twitter_url = $url;
      $twitter_name = 'website_twitter_' . $id;
      break;
    }
  }
  else {
    $twitter_name = 'website_twitter';
  }

  $form['twitter'] = array(
    '#type' => 'textfield',
    '#title' => 'Twitter URL',
    '#value' => $twitter_url,
    '#name' => $twitter_name,
    '#size' => 60
  );

  if(isset($facebook)) {
    foreach($facebook as $id=>$url) {
      $facebook_url = $url;
      $facebook_name = 'website_facebook_' . $id;
      break;
    }
  }
  else {
    $facebook_name = 'website_facebook';
  }
  
  $form['facebook'] = array(
    '#type' => 'textfield',
    '#title' => 'Facebook URL',
    '#value' => $facebook_url,
    '#name' => $facebook_name,
    '#size' => 60
  );
 
  $form['#validate'] = array('_artspan_artist_profile_validate');
  $form['#submit'] = array('_artspan_artist_profile_submit');
  $form['buttons']['submit']['#submit'][] = '_artspan_artist_profile_redirect';
}

function _artspan_artist_profile_validate($form, &$form_state) {
  drupal_add_js(drupal_get_path('module', 'artspan') . '/studio.js');
  foreach($form['#post'] as $field => $value) {
    if(strstr($field, 'website')) {
      if($value && (!valid_url($value) || !valid_url($value, TRUE))) {
	$value = "http://".$value;
	if($value && (!valid_url($value) || !valid_url($value, TRUE))) {
	  form_set_error($field, "One of the urls below is not valid.");
	}
      }
    }
  }
}

function _artspan_artist_profile_redirect($form, &$form_state) {
  $form_state['redirect'] = 'user/'.$form['uid']['#value'].'/edit/artwork';
}

// updated Civi when the profile is submitted margot@rd
function _artspan_artist_profile_submit($form, &$form_state) {
  $post = $form['#post'];

  $uid = $form['uid']['#value'];
  $contact = _artspan_get_civi_contact_public_location_info($uid);
  
  $contact_id = $contact['contact_id'];

  _artspan_sync_artist_role(user_load($form['#node']->uid), $user);

  $submitted_email = $post['email'];
  $submitted_phone = $post['phone'];

  $existing_email = $contact['public_email'];
  $existing_phone = $contact['public_phone'];

  //DELETE OLD EMAIL SINCE IT IS BEING REMOVED/REPLACED
  if ($existing_email &&
      (!$submitted_email || ($submitted_email != $existing_email))) {
    $params = array(
		    'version' => 3,
		    'sequential' => 1,
		    'id' => $contact['public_email_id'],
		    );
    $result = civicrm_api('Email', 'delete', $params);
   
  }
  //SUBMIT NEW EMAIL OR REPLACE OLD ONE
  if ($submitted_email && ($submitted_email != $existing_email)) {
    //add new public email
    $params = array(
		    'version' => 3,
		    'sequential' => 1,
		    'contact_id' => $contact_id,
		    'email' => $submitted_email,
		    'location_type_id' => ARTSPAN_PUBLIC_LOCATION_ID,
		    );
    $result = civicrm_api('Email', 'create', $params);
  }

  //DELETE OLD PHONE SINCE IT IS BEING REMOVED/REPLACED
  if ($existing_phone &&
      (!$submitted_phone || ($submitted_phone != $existing_phone))) {
    $params = array(
		    'version' => 3,
		    'sequential' => 1,
		    'id' => $contact['public_phone_id'],
		    );
    $result = civicrm_api('Phone', 'delete', $params);
   
  }
  //SUBMIT NEW PHONE OR REPLACE OLD ONE
  if ($submitted_phone && ($submitted_phone != $existing_phone)) {
    //add new public phone
    $params = array(
		    'version' => 3,
		    'sequential' => 1,
		    'contact_id' => $contact_id,
		    'phone' => $submitted_phone,
		    'location_type_id' => ARTSPAN_PUBLIC_LOCATION_ID,
		    );
    $result = civicrm_api('Phone', 'create', $params);
  }
  
  // Update the web sites
  $websites = _artspan_get_artist_websites($civi_user['contact_id']);

  $new_home_websites = array();
  $new_twitter = array();
  $new_facebook = array();
  $new_index = 0;
  foreach($post as $key => $value) {
    $args = explode('_', $key);
    if($args[0] == 'website' && $value) {
      $value = mysql_real_escape_string($value);
      if (strpos($value, 'http') === FALSE) {
	$value = "http://".$value;
      }
      if(is_numeric($args[1])) {
	$new_home_websites[$args[1]] = $value;
      }
      else if ($args[1] == "twitter") { 
	if(is_numeric($args[2])) {
	  $new_twitter[$args[2]] = $value;
	}
	else {
	  $new_twitter[0] = $value;
	}
      }
      else if ($args[1] == "facebook") { 
	if(is_numeric($args[2])) {
	  $new_facebook[$args[2]] = $value;
	}
	else {
	  $new_facebook[0] = $value;
	}
      }
      else {
	$new_home_websites[$new_index] = $value;
	$new_index++;
      }
    }
  }
  artspan_custom_website_update($contact_id, $new_twitter,
				$websites['twitter'],
				ARTSPAN_WEBSITE_TYPE_TWITTER);
  artspan_custom_website_update($contact_id, $new_facebook,
				$websites['facebook'],
				ARTSPAN_WEBSITE_TYPE_FACEBOOK);
  artspan_custom_website_update($contact_id, $new_home_websites,
				$websites['home'],
				ARTSPAN_WEBSITE_TYPE_HOME);
  
}

function artspan_custom_website_update($contact_id, $new, $old,$type) {
  $create_sites = array();
  $delete_sites = array();

  foreach($old as $id=>$url) {
    if ($id && ($new[$id] != $old[$id])) {
      $delete_sites[$id] = $url;
      unset($old[$id]);
    }
  }
  foreach($new as $id=>$url) {
    if (!$old[$id] && $url) {
      $create_sites[] = $url;
    }
  }

  foreach($delete_sites as $id=>$url) {
    $params = array(
		    'version' => 3,
		    'sequential' => 1,
		    'id' => $id,
		    );
    $result = civicrm_api('Website', 'delete', $params);
  }

  foreach($create_sites as $url) {
    $params = array(
		    'version' => 3,
		    'sequential' => 1,
		    'contact_id' => $contact_id,
		    'url' => $url,
		    'website_type_id' => $type,
		    );
    $result = civicrm_api('Website', 'create', $params);
  }
}


function artspan_custom_form_user_profile_form_alter(&$form) {
  // Turn off autocomplete.
  $form['#attributes'] = array('autocomplete' => 'off');

  /* The first part of this function is borrowed from the ajax username_check module,
   * but now the functionality also works for the user edit page.
   */
  $mode = variable_get('username_check_mode', 'auto');
  _username_check_load_resources($mode);

  if (isset($form['account']) && $form['account']['#type'] == 'fieldset') {
    $form_group = &$form['account'];
  }
  else {
    $form_group = &$form;
  }
  
  if ($mode == 'manual') {
    $form_group['name']['#weight'] = -5;
    $form_group['name']['#prefix'] = '<div id="username-check-wrapper">';
    $form_group['name']['#suffix'] = '</div>';

    $form_group['username_check_button'] = array(
      '#value' => '<input type="button" name="op" id="edit-username-check-button" value="Check availability" class="form-button" style="display: inline-block">',
      '#prefix' => '<div id="username-check-message" class="username-check-message"></div>',
      '#weight' => -4,
    );
  }
  elseif ($mode == 'auto') {
    $module_path = drupal_get_path('module', 'username_check');
    $form_group['name']['#prefix'] = '<div id="username-check-wrapper">';
    $form_group['name']['#suffix'] = '</div><div id="username-check-message"></div><div id="username-check-informer" class="username-check-informer">&nbsp;</div>';
  }

  /* Now, we want to add the civicrm personal information profile to this form. Fun! */
  $curr_user = $form['_account']['#value'];
  $civi_user = _artspan_get_civi_contact($curr_user->uid);
  
  $form['_civi_contact'] = array(
    '#type' => 'value',
    '#value' => $civi_user
  );
  
  $form['personal'] = 
    array(
	  '#type' => 'fieldset',
	  '#title' => 'Personal Information',
	  '#weight' => -20,
	  'profile' => 
	  array('#value' => 
		CRM_Core_BAO_UFGroup::getEditHTML($civi_user['contact_id'], 
						  'Personal Information')
		)
	  );
  
  $form['demographics'] = 
    array(
	  '#type' => 'fieldset',
	  '#title' => 'Demographic Information (Optional)',
	  '#weight' => -19,
	  'profile' => 
	  array('#value' => 
		CRM_Core_BAO_UFGroup::getEditHTML($civi_user['contact_id'], 
						  'Demographics (Optional)')
		)
	  );
  
}




function artspan_custom_user($op, &$edit, $account, $category = NULL) {
  if($op == 'after_update' && $category == 'account') {
    _artspan_sync_artist_role($account, $account->_civi_contact);
  }
  if($op == 'login') {
    _artspan_sync_artist_role($account, $account->_civi_contact);
  }
}  



// Prepopulate artist on new artwork form field
function artspan_custom_form_editview_node_form_new_alter(&$form) {
  $form['field_artist'][0]['#default_value']['uid'] = arg(1);
}

function artspan_custom_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  // If we're on the edit artwork page, make sure node's artist and uid are set.
  if($op == 'presave' && $node->type == 'artwork' && arg(0) == 'user' && arg(3) == 'artwork') {
    $user = user_load(arg(1));
    $node->uid = arg(1);
    $node->name = $user->name;
    $node->field_artist[0]['uid'] = arg(1);
    $node->title = $node->name . ' - ' . $node->field_content_title[0]['value'];
  }

  if($op == 'insert' && $node->type == 'artwork') {
    // If the current user has no thumbnail art, make this his thumbnail piece
    $profile = content_profile_load('artist', $node->uid);
    if($profile->field_ref_thumbnail_art[0]['nid'] == NULL) {
      $profile->field_ref_thumbail_art[0]['nid'] = $node->nid;
      $query = "UPDATE content_type_artist SET field_ref_thumbnail_art_nid = '{$node->nid}' WHERE nid='{$profile->nid}';";
      $result = db_query($query);
    }
  }
}

function artspan_custom_views_data_alter(&$data) {

  $data['civicrm_contact']['first_name'] = array(
  'title' => t('Last Name'),
  'help' => t('Last Name'),
  'field' => array(
  'handler' => 'civicrm_handler_field_contact_link',
  'click sortable' => TRUE,
  ),
  'argument' => array(
  'handler' => 'views_handler_argument_string',
  ),
  'filter' => array(
  'handler' => 'views_handler_filter_string',
  'allow empty' => TRUE,
  ),
  'sort' => array(
  'handler' => 'views_handler_sort',
  ),
  );
//DISPLAY Name for the Contact (Full Name with Prefixes and Suffixes)
// see civicrm.views.inc around line 238
    $data['civicrm_contact']['display_name'] = array(
        'title' => t('Display Name'),
        'help' => t('Full Name of the Contact with prefixes and suffixes'),
      'field' => array(
         'handler' => 'civicrm_handler_field_contact_link',
         'click sortable' => TRUE,
        ),
        'argument' => array(
         'handler' => 'views_handler_argument_string'
      ),
      'filter' => array(
         'handler' => 'views_handler_filter_string',
         'allow empty' => TRUE,
      ),
      'sort' => array(
         'handler' => 'views_handler_sort',
        )
   );
}
